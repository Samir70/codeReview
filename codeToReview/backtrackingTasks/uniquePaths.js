export const uniquePathsIII = {
    name: "Unique paths in 2d array from start to finish over every 0",
    author: "Samir70",
    language: "javaScript",
    code: [
        "const uniquePathsIII = grid => {",
        "    let paths = 0;",
        "    let start = [], zeros = 0;",
        "    let rows = grid.length, cols = grid[0].length;",
        "    for (let r = 0; r < grid.length; r++) {",
        "        for (let c = 0; c < grid[0].length; c++) {",
        "            if (grid[r][c] === 1) { start = [r, c] }",
        "            if (grid[r][c] === 0) { zeros++ }",
        "        }",
        "    }",
        "    const wholePath = (r, c) => {",
        "        if (r < 0 || c < 0 || r === rows || c === cols || grid[r][c] < 0) { return }",
        "        let cell = grid[r][c]",
        "        if (cell === 2 && zeros === 0) {",
        "            paths++;",
        "            return",
        "        }",
        "        grid[r][c] = -1; zeros--;",
        "        wholePath(r - 1, c); wholePath(r + 1, c);",
        "        wholePath(r, c - 1); wholePath(r, c + 1);",
        "        grid[r][c] = cell; zeros++;",
        "    }",
        "    grid[start[0]][start[1]] = -1",
        "    wholePath(start[0] - 1, start[1]);",
        "    wholePath(start[0] + 1, start[1]);",
        "    wholePath(start[0], start[1] - 1);",
        "    wholePath(start[0], start[1] + 1);",
        "    grid[start[0]][start[1]] = 1",
        "    return paths",
        "}"
    ]
}
